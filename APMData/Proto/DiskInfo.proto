syntax = "proto3";

option csharp_namespace = "APMData.Proto";

package APMData;

import "google/protobuf/Empty.proto";

service DiskInfoService {
	rpc EnumerateDisks (google.protobuf.Empty) returns (SystemDiskInfoReply);
	rpc GetAPM (GetAPMRequest) returns (GetAPMReply);
	rpc SetAPM (SetAPMRequest) returns (SetAPMReply);
}

service PowerStateService {
	rpc GetPowerState (google.protobuf.Empty) returns (PowerStateReply);
}

service ConfigurationService {
	rpc GetDriveAPMConfiguration (google.protobuf.Empty) returns (DriveAPMConfigurationReply);
}

message DiskInfoEntry {
	bool InfoValid = 1;
	uint32 Index = 2;
	uint32 Availability = 3;
	string Caption = 5;
	string Description = 7;
	string DeviceID = 8;
	string InterfaceType = 9;
	string Manufacturer = 10;
	string Model = 11;
	string SerialNumber = 13;
}

message SystemDiskInfoReply {
	int32 ReplyResult = 1;
	repeated DiskInfoEntry DiskInfoEntries = 2;
}

message GetAPMRequest {
	string DeviceID = 1;
}

message GetAPMReply {
	int32 ReplyResult = 1;
	uint32 APMValue = 2;
}

message SetAPMRequest {
	string DeviceID = 1;
	uint32 APMValue = 2;
}

message SetAPMReply {
	int32 ReplyResult = 1;
}

enum EACLineStatus {
	Offline = 0;
	Online = 1;
	LineStatusUnknown = 255;
}

enum EBatteryFlag {
	None = 0;
	High = 1;
	Low = 2;
	Critical = 4;
	Charging = 8;
	NoSystemBattery = 128;
	BatteryFlagUnknown = 255;
}

message PowerStateReply {
	int32 ReplyResult = 1;
	EACLineStatus ACLineStatus = 2;
	EBatteryFlag BatteryFlag = 3;
	int32 BatteryLifePercent = 4;
	int32 BatteryLifeTime = 5;
	int32 BatteryFullLifeTime = 6;
}

message DriveAPMConfigurationReplyEntry {
	string DeviceID = 1;
	uint32 DefaultValue = 2;
	uint32 UserValue = 3;
}

message DriveAPMConfigurationReply {
	int32 ReplyResult = 1;
	repeated DriveAPMConfigurationReplyEntry DriveAPMConfigurationReplyEntries = 2;
}